{"version":3,"file":"cms.b1c5437b3d5929423b3b.hot-update.js","sources":["webpack:///./src/templates/index-page.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport Feature from '../components/Feature'\nimport Credits from '../components/Credits'\nimport Quote from '../components/Quote'\nimport Video from '../components/Video'\nimport Friends from '../components/Friends'\nimport HomepageHero from '../components/HomepageHero'\n\nexport const IndexPageTemplate = ({\n  homepageHero,\n  quote,\n  video,\n  feature,\n  friends,\n  credits\n}) => (\n  <div>\n    <HomepageHero\n      {...homepageHero}\n    />\n    <Quote\n      {...quote}\n    />\n    <Video\n      {...video}\n    />\n    <Feature\n      {...feature}\n    />\n    <Friends\n      {...friends}\n    />\n    <Credits\n      {...credits}\n    />\n  </div>\n)\n\nconst IndexPage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark\n\n  return (\n    <Layout>\n      <IndexPageTemplate\n        homepageHero={frontmatter.homepageHero}\n        quote={frontmatter.quote}\n        video={frontmatter.video}\n        feature={frontmatter.feature}\n        friends={frontmatter.friends}\n        credits={frontmatter.credits}\n      />\n    </Layout>\n  )\n}\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query IndexPageTemplate {\n    markdownRemark(frontmatter: { templateKey: { eq: \"index-page\" } }) {\n      frontmatter {\n        homepageHero {\n          title,\n          subtitle\n        }\n        quote {\n          quoteText,\n          quoteSource\n        }\n        video {\n          videoId\n        }\n        feature {\n          title,\n          text,\n          ctaOne {\n            url\n            label\n          }\n          ctaTwo {\n            url\n            label\n          }\n          featureImage {\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1200, quality: 64) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            },\n            alt\n          }\n        }\n        friends {\n          title,\n          friendsList {\n            profileImage {\n              image {\n                childImageSharp {\n                  fluid(maxWidth: 1200, quality: 64) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              },\n              alt\n            }\n            name,\n            bio\n          }\n        }\n        credits {\n          title,\n          creditList {\n            logo {\n              image {\n                childImageSharp {\n                  fluid(maxWidth: 1200, quality: 64) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              },\n              alt\n            }\n            link {\n              url,\n              target\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxBA;AACA;AA6BA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AADA;AAQA;AAAA;AAEA;;;;;;;;;;AAzDA;AA8BA;AA2BA;;;;;;;;;;;;;;A","sourceRoot":""}